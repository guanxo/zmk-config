/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    combos {
        compatible = "zmk,combos";
        combo_backspace {
            timeout-ms = <30>;
            key-positions = <35 36>;
            bindings = <&kp BKSP>;
        };
        combo_ret {
            timeout-ms = <20>;
            key-positions = <36 37>;
            bindings = <&kp RET>;
        };
        combo_tab {
            timeout-ms = <30>;
            key-positions = <29 30>;
            bindings = <&kp LS(TAB)>;
        };
        combo_rev_tab {
            timeout-ms = <30>;
            key-positions = <28 29>;
            bindings = <&kp TAB>;
        };
        combo_undo {
            timeout-ms = <50>;
            key-positions = <52 53>;
            bindings = <&kp LC(Z)>;
        };
        combo_redo {
            timeout-ms = <50>;
            key-positions = <53 54>;
            bindings = <&kp LC(Y)>;
        };
        combo_copy {
            timeout-ms = <50>;
            key-positions = <42 43>;
            bindings = <&kp LC(C)>;
        };
        combo_paste {
            timeout-ms = <50>;
            key-positions = <43 44>;
            bindings = <&kp LC(V)>;
        };
        combo_save {
            timeout-ms = <50>;
            key-positions = <37 38>;
            bindings = <&kp LC(S)>;
        };
    };
};

/ {
    keymap {
        compatible =  "zmk,keymap" ;

        default_layer {
            bindings = <
   &kp ESC   &kp N1   &kp N2     &kp N3   &kp N4    &kp N5                                        &kp N6    &kp N7 &kp N8    &kp N9   &kp N0   &kp UNDER
   &kp TAB   &kp SQT  &kp COMMA  &kp DOT  &kp P     &kp Y  &kp DEL                     &kp RPAR  &kp F     &kp G  &kp C     &kp R    &kp L    &kp SQT
   &kp LSHFT &kp A    &kp O      &kp E    &kp U     &kp I  &kp RET                     &kp RET    &kp D     &kp H  &kp T     &kp N    &kp S    &kp RSHFT
   &kp LCTRL &kp SEMI &kp Q      &kp J    &kp K     &kp X  &kp PG_UP &kp PG_DN &kp HOME &kp END   &kp B     &kp M  &kp W     &kp V    &kp Z    &kp RCTRL
   &kp LGUI &kp LALT &mo ADJUST   &mo RAISE  &mo LOWER &mo LOWER   &kp LALT &kp RALT  &kp BKSP       &kp SPACE      &kp LEFT  &kp UP &kp DOWN   &kp RIGHT
            >;
        };

        lower_layer {
            bindings = <
   &kp F11   &kp F1   &kp F2   &kp F3 &kp F4   &kp F5                                        &kp F6    &kp F7 &kp F8    &kp F9   &kp F10   &kp F12
   &kp TAB   &kp SQT    &kp COMMA    &kp RS(RA(Z))  &kp RS(RA(X))    &kp CARET  &kp LPAR            &kp RPAR  &kp LS(N7)  &kp RBKT  &kp RA(N8)     &kp RA(N9)   &kp LS(RBKT)    &kp MINUS
   &kp CAPS &kp A    &kp O    &kp MINUS  &kp AT_SIGN    &kp LBRC  &kp RET                     &kp RET  &kp EXCL   &kp LS(N0)  &kp LS(N8)   &kp LS(N9)    &kp RA(MINUS) &kp SQT
   &kp LCTRL &kp SEMI    &kp Q    &kp J  &kp K    &kp RA(N1)  &kp PG_UP &kp PG_DN &kp HOME &kp END   &kp QUESTION  &kp SLASH  &kp RA(N7) &kp RA(N0)  &kp LS(DOT) &mt RSHFT RET
   &kp LGUI &kp LALT &kp LGUI &mo 3      &mo LOWER    &mo LOWER     &tog DEFAULT &kp DEL  &kp BKSP       &kp SPACE      &kp HOME  &kp PG_UP &kp PG_DN   &kp END
            >;
        };

        raise_layer {
            bindings = <
   &kp ESC   &kp N1   &kp N2   &kp N3 &kp N4   &kp N5                                        &kp N6    &kp N7 &kp N8    &kp N9   &kp N0   &kp QUESTION
   &kp TAB   &kp AT_SIGN    &kp DOLLAR    &kp NUBS  &kp PIPE    &kp LBRC  &kp LPAR                     &kp RPAR  &kp TILDE     &kp G  &kp C     &kp R    &kp L    &kp MINUS
   &kp LSHFT &kp HASH    &kp PERCENT    &kp SLASH  &kp NUBS    &kp SEMICOLON  &kp RET                     &kp RET  &kp NUHS     &kp H  &kp T     &kp N    &kp S &kp SQT
   &kp LCTRL &kp POUND    &kp AMPERSAND    &kp QMARK  &kp SEMI    &kp PERIOD  &kp PG_UP &kp PG_DN &kp HOME &kp END   &kp TILDE2     &kp M  &kp W &kp V  &kp Z &mt RSHFT RET
   &kp LCTRL &kp LALT &kp LGUI &mo 3      &mo LOWER    &mo LOWER     &mo LOWER &kp DEL  &kp BKSP       &kp SPACE      &kp LEFT  &kp DOWN &kp UP   &kp RIGHT
            >;
        };

        adjust_layer {
            bindings = <
   &kp ESC   &bt BT_SEL 0   &bt BT_SEL 1  &bt BT_SEL 2 &bt BT_SEL 3   &bt BT_SEL 4                                        &kp N6    &kp N7 &kp N8    &kp N9   &kp N0   &kp QUESTION
   &kp TAB   &kp SQT    &kp COMMA    &kp DOT  &kp P    &kp Y  &bt BT_CLR                     &kp RPAR  &kp F     &kp G  &kp C     &kp R    &kp L    &kp MINUS
   &kp LSHFT &kp A    &kp O    &kp E  &kp U    &kp I  &kp RET                     &kp RET  &kp D     &kp H  &kp T     &kp N    &kp S &kp SQT
   &kp LCTRL &kp SEMI    &kp Q    &kp J  &kp K    &kp X  &kp PG_UP &kp PG_DN &kp HOME &kp END   &kp B     &kp M  &kp W &kp V  &kp Z &mt RSHFT RET
   &kp LCTRL &kp LALT &kp LGUI &mo 3      &mo LOWER    &mo LOWER     &mo LOWER &kp DEL  &kp BKSP       &kp SPACE      &kp LEFT  &kp DOWN &kp UP   &kp RIGHT
            >;
        };
    };
};
